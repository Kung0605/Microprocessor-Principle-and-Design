Copyright 1986-2022 Xilinx, Inc. All Rights Reserved. Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-----------------------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2023.2 (lin64) Build 4029153 Fri Oct 13 20:13:54 MDT 2023
| Date         : Sat Oct  5 14:28:17 2024
| Host         : LAPTOP-16OE0O8T running 64-bit Ubuntu 22.04.4 LTS
| Command      : report_methodology -file soc_top_methodology_drc_routed.rpt -pb soc_top_methodology_drc_routed.pb -rpx soc_top_methodology_drc_routed.rpx
| Design       : soc_top
| Device       : xc7a100tcsg324-1
| Speed File   : -1
| Design State : Fully Routed
-----------------------------------------------------------------------------------------------------------------------------------------------------------

Report Methodology

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
             Max violations: <unlimited>
             Violations found: 20
+----------+----------+-------------------------------------+------------+
| Rule     | Severity | Description                         | Violations |
+----------+----------+-------------------------------------+------------+
| SYNTH-10 | Warning  | Wide multiplier                     | 4          |
| SYNTH-15 | Warning  | Byte wide write enable not inferred | 16         |
+----------+----------+-------------------------------------+------------+

2. REPORT DETAILS
-----------------
SYNTH-10#1 Warning
Wide multiplier  
Detected multiplier at Aquila_SoC/RISCV_CORE0/Execute/MulDiv/mul00 of size 16x18, it is decomposed from a wide multipler into 4 DSP blocks.
Related violations: <none>

SYNTH-10#2 Warning
Wide multiplier  
Detected multiplier at Aquila_SoC/RISCV_CORE0/Execute/MulDiv/mul00__0 of size 18x18, it is decomposed from a wide multipler into 4 DSP blocks.
Related violations: <none>

SYNTH-10#3 Warning
Wide multiplier  
Detected multiplier at Aquila_SoC/RISCV_CORE0/Execute/MulDiv/mul0_reg of size 16x16, it is decomposed from a wide multipler into 4 DSP blocks.
Related violations: <none>

SYNTH-10#4 Warning
Wide multiplier  
Detected multiplier at Aquila_SoC/RISCV_CORE0/Execute/MulDiv/mul0_reg__0 of size 18x16, it is decomposed from a wide multipler into 4 DSP blocks.
Related violations: <none>

SYNTH-15#1 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_0_0 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#2 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_0_1 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#3 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_0_2 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#4 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_0_3 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#5 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_1_0 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#6 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_1_1 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#7 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_1_2 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#8 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_1_3 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#9 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_2_0 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#10 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_2_1 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#11 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_2_2 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#12 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_2_3 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#13 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_3_0 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#14 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_3_1 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#15 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_3_2 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>

SYNTH-15#16 Warning
Byte wide write enable not inferred  
Byte wide write enable (BWWE) is not inferred for Block RAM Aquila_SoC/TCM/RAM_reg_3_3 because address width (14) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute ram_decomp = power if BWWE is desired..
Related violations: <none>


